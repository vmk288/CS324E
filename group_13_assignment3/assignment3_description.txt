For this assignment, we chose Lewis Carroll's "Alice's Adventures in Wonderland."

1. extract_words.py and Wordle word cloud - Aimilee Tran - I implemented a parseString function that strips each word of any punctuation. The parseString function does a great job at ensuring all words are only made of alphabetical characters, however this does result in a few strange strings of characters that were once contractions simply due to the nature of the code(i.e. "ve", "s", "re").

2. a3_novelvisualization - Vaishnavi Kashyap - For the word cloud based on uniquewords.txt, I chose to mirror one of the characters in the story, the Cheshire cat, and used shades of pink and purple. Word colors were assigned based on starting character: a-h, i-q, and r-z. I chose Rancho Regular as the font since it looked quirky and as if a young girl could have the same hand-writing, similar to the theme of the novel. The canvas changes words based on clicking it with the mouse.

3. a3_wordfrequency - Danish Tharvani - I created a visual representation of the relationship between word frequency and the number of words that share that frequency. I started off by reading the file 'wordfrequency.txt' and creating an array of the frequency values. I then went on to create a bar centered bar graph where the x-axis represents the frequency of the words and the y-axis represents the number of words with that specific frequency. I created a specific correlation to scale the number of words with very high or very low frequencies. Also, if the height of the bar is below a specific height, to were it would be invisible to the eye, the height of the bar is set to a predetermined length. A cool feature I added to this visual representation is the ability of the graph to change colors. The graph starts off as a red and eventually ends as a baby blue shade. I decided to keep the background dark to highlight the change in colors.